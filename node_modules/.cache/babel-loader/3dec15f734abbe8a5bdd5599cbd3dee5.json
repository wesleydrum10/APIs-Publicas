{"ast":null,"code":"var _jsxFileName = \"/home/wesley/API-FILMES/src/pages/main/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Header from '../../components/Header/index';\nimport api from '../../services/api';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n\n  const [filmes, setFilmes] = useState([]);\n  const [search, setSearch] = useState('');\n  useEffect(() => {\n    let params = '';\n    let type = '';\n\n    if (search) {\n      params = search.toLocaleLowerCase();\n      console.log('Search', params);\n    }\n\n    api.get(`?s=${params}&apikey=87cbb43e`).then(response => {\n      setFilmes(response.data.Search);\n      console.log('Filmes', response.data);\n    }).catch(() => {\n      console.log('Erro ao trazer os dados');\n    });\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      value: search,\n      value: t,\n      value: s,\n      placeholder: \"BUSCAR\",\n      onChange: searching => setSearch(searching)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), filmes ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-list\",\n      children: filmes.map(filme => /*#__PURE__*/_jsxDEV(\"article\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: filme.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Ano: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: filme.Year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 51\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: filme.Type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: filme.Poster\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this)]\n      }, filme.imdbID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this) : \"Não encontrado\"]\n  }, void 0, true);\n}\n\n_s(Main, \"nmTDwuvPTKKuCFEYRXSLdxQ7Egw=\");\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/wesley/API-FILMES/src/pages/main/index.js"],"names":["React","useState","useEffect","Header","api","Main","filmes","setFilmes","search","setSearch","params","type","toLocaleLowerCase","console","log","get","then","response","data","Search","catch","t","s","searching","map","filme","Title","Year","Type","Poster","imdbID"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAO,cAAP;;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAE3B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,MAAM,GAAG,EAAb;AACA,QAAIC,IAAI,GAAG,EAAX;;AACA,QAAIH,MAAJ,EAAY;AACRE,MAAAA,MAAM,GAAGF,MAAM,CAACI,iBAAP,EAAT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,MAAtB;AACH;;AACDN,IAAAA,GAAG,CAACW,GAAJ,CAAS,MAAKL,MAAO,kBAArB,EACKM,IADL,CACWC,QAAD,IAAc;AAChBV,MAAAA,SAAS,CAACU,QAAQ,CAACC,IAAT,CAAcC,MAAf,CAAT;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBG,QAAQ,CAACC,IAA/B;AACH,KAJL,EAKKE,KALL,CAKW,MAAM;AACTP,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACH,KAPL;AAQH,GAfQ,EAeN,CAACN,MAAD,CAfM,CAAT;AAiBA,sBACI;AAAA,4BACI,QAAC,MAAD;AACI,MAAA,KAAK,EAAEA,MADX;AAEI,MAAA,KAAK,EAAEa,CAFX;AAGI,MAAA,KAAK,EAAEC,CAHX;AAII,MAAA,WAAW,EAAC,QAJhB;AAKI,MAAA,QAAQ,EAAGC,SAAD,IAAed,SAAS,CAACc,SAAD;AALtC;AAAA;AAAA;AAAA;AAAA,YADJ,EAQKjB,MAAM,gBACH;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACKA,MAAM,CAACkB,GAAP,CAAWC,KAAK,iBACb;AAAA,gCACI;AAAA,oBAASA,KAAK,CAACC;AAAf;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAE0B;AAAA,oBAAID,KAAK,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,gBAF1B,eAGI;AAAA,oBAAIF,KAAK,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAK,UAAA,GAAG,EAAEH,KAAK,CAACI;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA,SAAcJ,KAAK,CAACK,MAApB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADG,GAWD,gBAnBV;AAAA,kBADJ;AAwBH;;GA9CuBzB,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from '../../components/Header/index';\nimport api from '../../services/api';\nimport './styles.css';\n\nexport default function Main() {\n\n    const [filmes, setFilmes] = useState([])\n    const [search, setSearch] = useState('')\n\n    useEffect(() => {\n        let params = ''\n        let type = ''\n        if (search) {\n            params = search.toLocaleLowerCase()\n            console.log('Search', params)\n        }\n        api.get(`?s=${params}&apikey=87cbb43e`)\n            .then((response) => {\n                setFilmes(response.data.Search)\n                console.log('Filmes', response.data)\n            })\n            .catch(() => {\n                console.log('Erro ao trazer os dados')\n            })\n    }, [search])\n\n    return (\n        <>\n            <Header \n                value={search} \n                value={t}\n                value={s}\n                placeholder=\"BUSCAR\" \n                onChange={(searching) => setSearch(searching)}\n            />\n            {filmes ?\n                <div className=\"product-list\">\n                    {filmes.map(filme => (\n                        <article key={filme.imdbID}>\n                            <strong>{filme.Title}</strong>\n                            <strong>Ano: </strong><p>{filme.Year}</p>\n                            <p>{filme.Type}</p>\n                            <img src={filme.Poster} />\n                        </article>\n                    ))}\n                </div>\n                : \"Não encontrado\"}\n\n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}